quarkus.http.port=8083

# container
quarkus.container-image.build=true
quarkus.container-image.push=false
quarkus.container-image.group=edoardosarri
quarkus.container-image.name=inventory-service
quarkus.container-image.tag=1.1

# kubernetes
quarkus.kubernetes.name=inventory-service
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.image-pull-policy=Never
quarkus.kubernetes.prometheus.generate-service-monitor=false

# data base
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=user
quarkus.datasource.password=pass
quarkus.datasource.jdbc.url=jdbc:mysql://mysql-inventory:3306/mysql-inventory?useSSL=false&allowPublicKeyRetrieval=true
%prod.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/inventory
quarkus.kubernetes.env.vars.quarkus-datasource-jdbc-url=jdbc:mysql://mysql-inventory:3306/mysql-inventory?useSSL=false&allowPublicKeyRetrieval=true

# hibernate
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql

# graphql
quarkus.smallrye-graphql.ui.always-include=true

# jaeger
quarkus.kubernetes.env.vars.otel-service-name=inventory-service
quarkus.otel.resource.attributes=service.name=inventory-service
quarkus.kubernetes.env.vars.otel-exporter-otlp-endpoint=http://jaeger-collector:4317
quarkus.otel.exporter.otlp.endpoint=http://jaeger-collector:4317
quarkus.otel.traces.sampler=always_on
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

quarkus.log.category."org.hibernate".level=DEBUG
quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.hibernate.type".level=TRACE

# prometheus and grafana
quarkus.kubernetes.prometheus.generate-service-monitor=true
quarkus.kubernetes.labels.release=prometheus