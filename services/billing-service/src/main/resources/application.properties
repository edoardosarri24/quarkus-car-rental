
# container
quarkus.container-image.build=true
quarkus.container-image.push=false
quarkus.container-image.group=edoardosarri
quarkus.container-image.name=billing-service
quarkus.container-image.tag=2.0

# kubernetes
quarkus.kubernetes.name=billing-service
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.image-pull-policy=Never

# references
quarkus.http.port=8084
quarkus.http.test-port=8084

# db
quarkus.mongodb.database=billing
quarkus.mongodb.connection-string=mongodb://root:password@mongodb-billing:27017

# kafka
%dev.kafka.bootstrap.servers=localhost:9092
%prod.kafka.bootstrap.servers=kafka:9092
mp.messaging.outgoing.invoices-confirmations.connector=smallrye-kafka
mp.messaging.incoming.invoices-adjust.connector=smallrye-kafka

# rabbitmq
rabbitmq-host=rabbitmq
quarkus.kubernetes.env.vars.rabbitmq-port=5672
rabbitmq-username=user
rabbitmq-password=pass
mp.messaging.incoming.invoices.connector=smallrye-rabbitmq
mp.messaging.incoming.invoices-adjust.auto.offset.reset=earliest

# jaeger
quarkus.otel.service.name=billing-service
quarkus.otel.exporter.otlp.endpoint=http://jaeger-collector:4317
quarkus.otel.traces.sampler=always_on

# prometheus and grafana
quarkus.kubernetes.prometheus.generate-service-monitor=true
quarkus.kubernetes.labels.release=prometheus