quarkus.http.port=8082

# container
quarkus.container-image.build=true
quarkus.container-image.push=false
quarkus.container-image.group=edoardosarri
quarkus.container-image.name=rental-service
quarkus.container-image.tag=1.1

# kubernetes
quarkus.kubernetes.name=rental-service
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.image-pull-policy=IfNotPresent
quarkus.kubernetes.prometheus.generate-service-monitor=false

# reference
quarkus.rest-client.reservation.url=http://localhost:8081
quarkus.kubernetes.env.vars.quarkus-rest-client-reservation-url=http://reservation-service

# db
%prod.quarkus.mongodb.connection-string=mongodb://mongo:27017
quarkus.kubernetes.env.vars.quarkus-mongodb-connection-string=mongodb://root:password@mongodb-rental:27017
quarkus.mongodb.database=rental-test

# kafka
%prod.kafka.bootstrap.servers=localhost:9092
quarkus.kubernetes.env.vars.kafka-bootstrap-servers=kafka-rental:9092
